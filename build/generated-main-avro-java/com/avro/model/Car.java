/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.avro.model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Car extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7847083526488598748L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Car\",\"namespace\":\"com.avro.model\",\"fields\":[{\"name\":\"brandName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"regNo\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"chasisNo\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"numberOfWheels\",\"type\":\"int\"},{\"name\":\"currentSpeed\",\"type\":\"double\"},{\"name\":\"price\",\"type\":\"long\"},{\"name\":\"isLatestModel\",\"type\":\"boolean\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String brandName;
  @Deprecated public java.lang.String regNo;
  @Deprecated public java.lang.String chasisNo;
  @Deprecated public int numberOfWheels;
  @Deprecated public double currentSpeed;
  @Deprecated public long price;
  @Deprecated public boolean isLatestModel;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Car() {}

  /**
   * All-args constructor.
   * @param brandName The new value for brandName
   * @param regNo The new value for regNo
   * @param chasisNo The new value for chasisNo
   * @param numberOfWheels The new value for numberOfWheels
   * @param currentSpeed The new value for currentSpeed
   * @param price The new value for price
   * @param isLatestModel The new value for isLatestModel
   */
  public Car(java.lang.String brandName, java.lang.String regNo, java.lang.String chasisNo, java.lang.Integer numberOfWheels, java.lang.Double currentSpeed, java.lang.Long price, java.lang.Boolean isLatestModel) {
    this.brandName = brandName;
    this.regNo = regNo;
    this.chasisNo = chasisNo;
    this.numberOfWheels = numberOfWheels;
    this.currentSpeed = currentSpeed;
    this.price = price;
    this.isLatestModel = isLatestModel;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return brandName;
    case 1: return regNo;
    case 2: return chasisNo;
    case 3: return numberOfWheels;
    case 4: return currentSpeed;
    case 5: return price;
    case 6: return isLatestModel;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: brandName = (java.lang.String)value$; break;
    case 1: regNo = (java.lang.String)value$; break;
    case 2: chasisNo = (java.lang.String)value$; break;
    case 3: numberOfWheels = (java.lang.Integer)value$; break;
    case 4: currentSpeed = (java.lang.Double)value$; break;
    case 5: price = (java.lang.Long)value$; break;
    case 6: isLatestModel = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'brandName' field.
   * @return The value of the 'brandName' field.
   */
  public java.lang.String getBrandName() {
    return brandName;
  }

  /**
   * Sets the value of the 'brandName' field.
   * @param value the value to set.
   */
  public void setBrandName(java.lang.String value) {
    this.brandName = value;
  }

  /**
   * Gets the value of the 'regNo' field.
   * @return The value of the 'regNo' field.
   */
  public java.lang.String getRegNo() {
    return regNo;
  }

  /**
   * Sets the value of the 'regNo' field.
   * @param value the value to set.
   */
  public void setRegNo(java.lang.String value) {
    this.regNo = value;
  }

  /**
   * Gets the value of the 'chasisNo' field.
   * @return The value of the 'chasisNo' field.
   */
  public java.lang.String getChasisNo() {
    return chasisNo;
  }

  /**
   * Sets the value of the 'chasisNo' field.
   * @param value the value to set.
   */
  public void setChasisNo(java.lang.String value) {
    this.chasisNo = value;
  }

  /**
   * Gets the value of the 'numberOfWheels' field.
   * @return The value of the 'numberOfWheels' field.
   */
  public java.lang.Integer getNumberOfWheels() {
    return numberOfWheels;
  }

  /**
   * Sets the value of the 'numberOfWheels' field.
   * @param value the value to set.
   */
  public void setNumberOfWheels(java.lang.Integer value) {
    this.numberOfWheels = value;
  }

  /**
   * Gets the value of the 'currentSpeed' field.
   * @return The value of the 'currentSpeed' field.
   */
  public java.lang.Double getCurrentSpeed() {
    return currentSpeed;
  }

  /**
   * Sets the value of the 'currentSpeed' field.
   * @param value the value to set.
   */
  public void setCurrentSpeed(java.lang.Double value) {
    this.currentSpeed = value;
  }

  /**
   * Gets the value of the 'price' field.
   * @return The value of the 'price' field.
   */
  public java.lang.Long getPrice() {
    return price;
  }

  /**
   * Sets the value of the 'price' field.
   * @param value the value to set.
   */
  public void setPrice(java.lang.Long value) {
    this.price = value;
  }

  /**
   * Gets the value of the 'isLatestModel' field.
   * @return The value of the 'isLatestModel' field.
   */
  public java.lang.Boolean getIsLatestModel() {
    return isLatestModel;
  }

  /**
   * Sets the value of the 'isLatestModel' field.
   * @param value the value to set.
   */
  public void setIsLatestModel(java.lang.Boolean value) {
    this.isLatestModel = value;
  }

  /**
   * Creates a new Car RecordBuilder.
   * @return A new Car RecordBuilder
   */
  public static com.avro.model.Car.Builder newBuilder() {
    return new com.avro.model.Car.Builder();
  }

  /**
   * Creates a new Car RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Car RecordBuilder
   */
  public static com.avro.model.Car.Builder newBuilder(com.avro.model.Car.Builder other) {
    return new com.avro.model.Car.Builder(other);
  }

  /**
   * Creates a new Car RecordBuilder by copying an existing Car instance.
   * @param other The existing instance to copy.
   * @return A new Car RecordBuilder
   */
  public static com.avro.model.Car.Builder newBuilder(com.avro.model.Car other) {
    return new com.avro.model.Car.Builder(other);
  }

  /**
   * RecordBuilder for Car instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Car>
    implements org.apache.avro.data.RecordBuilder<Car> {

    private java.lang.String brandName;
    private java.lang.String regNo;
    private java.lang.String chasisNo;
    private int numberOfWheels;
    private double currentSpeed;
    private long price;
    private boolean isLatestModel;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.avro.model.Car.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.brandName)) {
        this.brandName = data().deepCopy(fields()[0].schema(), other.brandName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.regNo)) {
        this.regNo = data().deepCopy(fields()[1].schema(), other.regNo);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.chasisNo)) {
        this.chasisNo = data().deepCopy(fields()[2].schema(), other.chasisNo);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.numberOfWheels)) {
        this.numberOfWheels = data().deepCopy(fields()[3].schema(), other.numberOfWheels);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.currentSpeed)) {
        this.currentSpeed = data().deepCopy(fields()[4].schema(), other.currentSpeed);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.price)) {
        this.price = data().deepCopy(fields()[5].schema(), other.price);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.isLatestModel)) {
        this.isLatestModel = data().deepCopy(fields()[6].schema(), other.isLatestModel);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Car instance
     * @param other The existing instance to copy.
     */
    private Builder(com.avro.model.Car other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.brandName)) {
        this.brandName = data().deepCopy(fields()[0].schema(), other.brandName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.regNo)) {
        this.regNo = data().deepCopy(fields()[1].schema(), other.regNo);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.chasisNo)) {
        this.chasisNo = data().deepCopy(fields()[2].schema(), other.chasisNo);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.numberOfWheels)) {
        this.numberOfWheels = data().deepCopy(fields()[3].schema(), other.numberOfWheels);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.currentSpeed)) {
        this.currentSpeed = data().deepCopy(fields()[4].schema(), other.currentSpeed);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.price)) {
        this.price = data().deepCopy(fields()[5].schema(), other.price);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.isLatestModel)) {
        this.isLatestModel = data().deepCopy(fields()[6].schema(), other.isLatestModel);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'brandName' field.
      * @return The value.
      */
    public java.lang.String getBrandName() {
      return brandName;
    }

    /**
      * Sets the value of the 'brandName' field.
      * @param value The value of 'brandName'.
      * @return This builder.
      */
    public com.avro.model.Car.Builder setBrandName(java.lang.String value) {
      validate(fields()[0], value);
      this.brandName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'brandName' field has been set.
      * @return True if the 'brandName' field has been set, false otherwise.
      */
    public boolean hasBrandName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'brandName' field.
      * @return This builder.
      */
    public com.avro.model.Car.Builder clearBrandName() {
      brandName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'regNo' field.
      * @return The value.
      */
    public java.lang.String getRegNo() {
      return regNo;
    }

    /**
      * Sets the value of the 'regNo' field.
      * @param value The value of 'regNo'.
      * @return This builder.
      */
    public com.avro.model.Car.Builder setRegNo(java.lang.String value) {
      validate(fields()[1], value);
      this.regNo = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'regNo' field has been set.
      * @return True if the 'regNo' field has been set, false otherwise.
      */
    public boolean hasRegNo() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'regNo' field.
      * @return This builder.
      */
    public com.avro.model.Car.Builder clearRegNo() {
      regNo = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'chasisNo' field.
      * @return The value.
      */
    public java.lang.String getChasisNo() {
      return chasisNo;
    }

    /**
      * Sets the value of the 'chasisNo' field.
      * @param value The value of 'chasisNo'.
      * @return This builder.
      */
    public com.avro.model.Car.Builder setChasisNo(java.lang.String value) {
      validate(fields()[2], value);
      this.chasisNo = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'chasisNo' field has been set.
      * @return True if the 'chasisNo' field has been set, false otherwise.
      */
    public boolean hasChasisNo() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'chasisNo' field.
      * @return This builder.
      */
    public com.avro.model.Car.Builder clearChasisNo() {
      chasisNo = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'numberOfWheels' field.
      * @return The value.
      */
    public java.lang.Integer getNumberOfWheels() {
      return numberOfWheels;
    }

    /**
      * Sets the value of the 'numberOfWheels' field.
      * @param value The value of 'numberOfWheels'.
      * @return This builder.
      */
    public com.avro.model.Car.Builder setNumberOfWheels(int value) {
      validate(fields()[3], value);
      this.numberOfWheels = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'numberOfWheels' field has been set.
      * @return True if the 'numberOfWheels' field has been set, false otherwise.
      */
    public boolean hasNumberOfWheels() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'numberOfWheels' field.
      * @return This builder.
      */
    public com.avro.model.Car.Builder clearNumberOfWheels() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'currentSpeed' field.
      * @return The value.
      */
    public java.lang.Double getCurrentSpeed() {
      return currentSpeed;
    }

    /**
      * Sets the value of the 'currentSpeed' field.
      * @param value The value of 'currentSpeed'.
      * @return This builder.
      */
    public com.avro.model.Car.Builder setCurrentSpeed(double value) {
      validate(fields()[4], value);
      this.currentSpeed = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'currentSpeed' field has been set.
      * @return True if the 'currentSpeed' field has been set, false otherwise.
      */
    public boolean hasCurrentSpeed() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'currentSpeed' field.
      * @return This builder.
      */
    public com.avro.model.Car.Builder clearCurrentSpeed() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'price' field.
      * @return The value.
      */
    public java.lang.Long getPrice() {
      return price;
    }

    /**
      * Sets the value of the 'price' field.
      * @param value The value of 'price'.
      * @return This builder.
      */
    public com.avro.model.Car.Builder setPrice(long value) {
      validate(fields()[5], value);
      this.price = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'price' field has been set.
      * @return True if the 'price' field has been set, false otherwise.
      */
    public boolean hasPrice() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'price' field.
      * @return This builder.
      */
    public com.avro.model.Car.Builder clearPrice() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'isLatestModel' field.
      * @return The value.
      */
    public java.lang.Boolean getIsLatestModel() {
      return isLatestModel;
    }

    /**
      * Sets the value of the 'isLatestModel' field.
      * @param value The value of 'isLatestModel'.
      * @return This builder.
      */
    public com.avro.model.Car.Builder setIsLatestModel(boolean value) {
      validate(fields()[6], value);
      this.isLatestModel = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'isLatestModel' field has been set.
      * @return True if the 'isLatestModel' field has been set, false otherwise.
      */
    public boolean hasIsLatestModel() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'isLatestModel' field.
      * @return This builder.
      */
    public com.avro.model.Car.Builder clearIsLatestModel() {
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public Car build() {
      try {
        Car record = new Car();
        record.brandName = fieldSetFlags()[0] ? this.brandName : (java.lang.String) defaultValue(fields()[0]);
        record.regNo = fieldSetFlags()[1] ? this.regNo : (java.lang.String) defaultValue(fields()[1]);
        record.chasisNo = fieldSetFlags()[2] ? this.chasisNo : (java.lang.String) defaultValue(fields()[2]);
        record.numberOfWheels = fieldSetFlags()[3] ? this.numberOfWheels : (java.lang.Integer) defaultValue(fields()[3]);
        record.currentSpeed = fieldSetFlags()[4] ? this.currentSpeed : (java.lang.Double) defaultValue(fields()[4]);
        record.price = fieldSetFlags()[5] ? this.price : (java.lang.Long) defaultValue(fields()[5]);
        record.isLatestModel = fieldSetFlags()[6] ? this.isLatestModel : (java.lang.Boolean) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
